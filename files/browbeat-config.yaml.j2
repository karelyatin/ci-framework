#jinja2: trim_blocks:True, lstrip_blocks:True
# Basic set of initial stress tests to test overcloud before running complete set of benchmarks.
browbeat:
  cloud_name: {{ CLOUD_NAME }}
  rerun: 1
  # Two types of rerun:
  # iteration reruns on the iteration
  # complete reruns after all workloads complete
  # rerun_type: complete
  rerun_type: iteration
  # This option enables starting collectd before running workloads,
  # and stopping collectd after running workloads. It should be enabled
  # when it is required to store collectd data only when workloads
  # are running. Please install collectd by running the command
  # "cd ansible;ansible-playbook -i hosts.yml -vvv install/collectd.yml" before
  # setting this option to true.
  start_stop_collectd: false
  # This option enables creation of annotations on the Grafana dashboard.
  # Separate annotations will be created on all panels for the duration of
  # each scenario that is run using this browbeat configuration file.
  # grafana_host, grafana_port, grafana_username, grafana_password
  # and grafana_dashboard_uid have to be passed in
  # ansible/install/group_vars/all.yml before this option is enabled.
  # In the Openstack General System Performance Dashboard, the default
  # annotation setting should be set to query by tag $Cloud when this feature
  # is enabled.
  # This feature has been tested on Grafana v9.2.0
  create_grafana_annotations: false
ansible:
  hosts: ansible/hosts.yml
  metadata_playbook: ansible/gather/stockpile.yml
  logging_playbook: ansible/common_logging/browbeat_logging.yml
  start_collectd_playbook: ansible/install/start-collectd.yml
  stop_collectd_playbook: ansible/install/stop-collectd.yml
  check_collectd_config_playbook: ansible/install/check-collectd-config.yml
  ssh_config: /home/stack/.ssh/config
elasticsearch:
  enabled: {{ ELASTICSEARCH_ENABLED }}
  host: {{ ELASTICSEARCH_HOST }}
  port: 9200
  life: shortterm
  regather: false
  metadata_files:
    - name: hardware-metadata
      file: metadata/hardware-metadata.json
    - name: environment-metadata
      file: metadata/environment-metadata.json
    - name: software-metadata
      file: metadata/software-metadata.json
    - name: version
      file: metadata/version.json
    - name: jenkins
      file: metadata/jenkins.json
grafana:
  enabled: false
  host: example.grafana.com
  port: 3000
  dashboards:
    - openstack-general-system-performance
filebeat:
  enabled: false
rally:
  sleep_before: 5
  sleep_after: 5
  plugins:
    - glance: rally/rally-plugins/glance
    - neutron: rally/rally-plugins/neutron
    - netcreate-boot: rally/rally-plugins/netcreate-boot
    - octavia: rally/rally-plugins/octavia
    - cinder: rally/rally-plugins/cinder
    - nova: rally/rally-plugins/nova
    - browbeat: rally/rally-plugins/browbeat
    - workloads: rally/rally-plugins/workloads
    - dynamic-workloads: rally/rally-plugins/dynamic-workloads
    - reports: rally/rally-plugins/reports
shaker:
  server: 1.1.1.1
  port: 5555
  flavor: m1.small
  join_timeout: 600
  sleep_before: 0
  sleep_after: 0
  shaker_region: regionOne
  external_host: 2.2.2.2

workloads:
  - name: {{ dfg_rally_name }}
    enabled: {{ enabled }}
    type: {{ type }}
    rally_deployment: {{ rally_deployment }}
    times: {{ times }}
    concurrency:
    {% for c in concurrency %}
      - {{ c }}
    {% endfor %}
    scenarios:
    {% for s in scenarios %}
      - name: {{ s.name }}
        enabled: {{ s.enabled }}
        file: {{ s.file }}
        {% if s.params is defined %}
        {% for k, v in s.params.items() %}
        {% if k == "concurrency" %}
        {{ k }}:
          {% for i in v %}
          - {{ i }}
          {% endfor %}
        {% else %}
        {{ k }}: {{ v }}
        {% endif %}
        {% endfor %}
        {% endif %}
    {% endfor %}
